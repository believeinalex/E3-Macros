Sub Main 

        /declare MerchTemp            int outer     1 
        /declare PackTotal            int outer     7 
        /declare PackSlot              int outer      1 
        /declare BagSlot                int outer       1 
      /declare j int local
      /declare b int local 0
      /declare p int local 1
      /declare s int local -1
      /declare i int local


/for MerchTemp ${Window[MerchantWnd].Child[MW_ItemList].List[Spell,2]} to ${Window[MerchantWnd].Child[MW_ItemList].Items} 

/notify MerchantWnd ItemList listselect ${MerchTemp} 
/delay 5 
/notify MerchantWnd Itemlist rightmouse 1 
/delay 5 

/if (${DisplayItem.Name.Find[Spell]} == 1) { 
        /if (${DisplayItem.Spell.Level} <= ${Me.Level}) { 
                /if (${Me.Book[${DisplayItem.Spell}]}==NULL && ${FindItem[${DisplayItem.Name}].ID}==NULL && ${FindItemBank[${DisplayItem.Name}].ID}==NULL) {
               /echo Buying ${DisplayItem.Spell} for level ${DisplayItem.Spell.Level}
               /buyitem 1
               /delay 3s
                } else /if (!${FindItemBank[${DisplayItem.Name}].ID}==NULL) {
               /echo ${Me.CleanName} has ${DisplayItem.Name} for level ${DisplayItem.Spell.Level} in the bank.
            } else /if (!${Me.Book[${DisplayItem.Spell}]}==NULL) {
               /echo ${Me.CleanName} has ${DisplayItem.Name} for level ${DisplayItem.Spell.Level} scribed.
            } else /if (!${FindItem[${DisplayItem.Name}].ID}==NULL) {
               /echo ${Me.CleanName} has ${DisplayItem.Name} for level ${DisplayItem.Spell.Level} in inventory.
                } 
        } 
} else /if (!${DisplayItem.Name.Find[Spell]}) { 
                        /echo End of spells. 
                        /goto :Sbook
        } 

/next MerchTemp 

:Sbook 
/notify MerchantWnd MW_Done_Button leftmouseup 
/delay 1s
/if (${Cursor.ID}) /inventory

   /if (!${Window[SpellBookWnd].Open}) /squelch /windowstate SpellBookWnd open
  

   /for i 1 to 10
      /if (${InvSlot[pack${i}].Item.Container}) {

         /if (!${Window[Pack${i}].Open}) /itemnotify pack${i} rightmouseup
         | need a small delay so bag content can load
         /delay 1

         /for j 1 to ${InvSlot[pack${i}].Item.Container}
            /if (${InvSlot[pack${i}].Item.Item[${j}].Type.Equal["Scroll"]} && ${InvSlot[pack${i}].Item.Item[${j}].Spell.Level} <= ${Me.Level} && !${Me.Book[${InvSlot[pack${i}].Item.Item[${j}].Spell.Name}]}) {

            /echo Please scribe ${InvSlot[pack${i}].Item.Item[${j}].Spell.Name} on cursor
            /itemnotify in pack${i} ${j} leftmouseup

            | Need a small delay so pickup event can happen
            /delay 1

            | Logic for finding which spell book page and slot next spell should go. 
            :FindNextBlankSpot
            /varcalc b ${b}+1
            /varcalc s ${s}+1
            /if (${s}>15) {
               /varset s 0
               /varcalc p ${p}+2
            }

            |/echo Me.Book[${b}] = page ${p} , slot ${s} = ${Me.Book[${b}]}
            /if (${Me.Book[${b}].Name.NotEqual[NULL]}) /goto :FindNextBlankSpot

            /book ${p}
            /delay 2
            /notify SpellBookWnd SBW_Spell${s} leftmouseup
            
            | Loop while user scribes the spell
            :WaitForScribe
            /if (${Cursor.ID}) /goto :WaitForScribe
            }
         /next j

         /if (${Window[Pack${i}].Open}) /itemnotify pack${i} rightmouseup
      }
   /next i

   /if (${Window[SpellBookWnd].Open}) /squelch /windowstate SpellBookWnd close
/return